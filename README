# Java SE 7+ HttpHead class. Read/write/store HTTP message head. MIT (c) 2020-2021 miktim@mail.ru

Release notes:
  - the header names (keys) ara case-insensitive;
  - multiple header values are stored on one line, separated by commas;
  - the HTTP message request/status line is accessed using START_LINE constant;
  - without any data control;
  - dist/ contains compressed Java 7 jar file.

package org.miktim.http;

Overview:

  Class HttpHead;
    Constructors:
      HttpHead();
      HttpHead(Map<String, String> m);
      
    Constants:
      static String START_LINE; // key to access the request/status line
      
    Methods:
      HttpHead set(String key, String value); // create or overwrite header value
      HttpHead add(String key, String value); // add comma separated value or create header
      String get(String key);
      String remove(String key); // returns header value or null
      boolean containsKey(String key);
      List<String> nameList();   // returns list of header names
      Map<String, String> headMap();
      HttpHead read(InputStream is) throws IOException;
      void write(OutputStream os) throws IOException; // !set start-line before writing
      String toString(); // with a trailing blank line
      
Usage:
  See WebSocket package WsConnection class handshakeClient, handshakeServer methods.
